# suppress inspection "UnusedProperty" for whole file
spring.application.name=liber-api
spring.main.allow-circular-references=true
# ===============================
# = DATA SOURCE
# DB_URL, DB_USERNAME, DB_PASSWORD are set in the active profile
# ===============================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=none
# spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.generate-ddl=false
# Show or not log for each sql query
spring.jpa.show-sql=true
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.internal.JCacheRegionFactory
spring.jpa.properties.jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE
spring.jpa.properties.hibernate.javax.cache.missing_cache_strategy=create
# ===============================
# = DB INIT
# ===============================
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=never
# ===============================
# = OPENAPI
# https://www.baeldung.com/spring-rest-openapi-documentation
# ===============================
server.servlet.context-path=/liber
springdoc.api-docs.path=/openapi.json
springdoc.swagger-ui.path=/swagger-ui
springdoc.writer-with-order-by-keys=true
# ===============================
# = LOG
# https://docs.spring.io/spring-boot/reference/features/logging.html
# ===============================
#debug=false
#logging.level.root=warn
# ===============================
# = I18N
# ===============================
spring.messages.basename=i18n/errors/hibernate,i18n/errors/validations,i18n/errors/jakarta-validation,i18n/errors/message
spring.messages.encoding=UTF-8
# ===============================
# = MAIL
# ===============================
# account spedizione email di alert
alert.mail.from=${MAIL_FROM}
# soglia minima per il controllo
alert.mail.min.value=${MAIL_ALERT_SOGLIA_VALORE}
# nr di letture consecutive che devono superare la soglia di controllo
alert.mail.nr.letture.controllo=${MAIL_ALERT_NR_LETTURE_CONTROLLO}
# intervallo in secondi per il task di spedizione alert email
alert.mail.task.rate=${MAIL_ALERT_TASK_RATE}
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=smtp
#spring.mail.properties.mail.smtp.ssl.trust=${MAIL_HOST}
spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=${MAIL_AUTH}
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
# ===============================
# = JWT TOKEN
# ===============================
jwt.private-key=classpath:jwt/app.key
jwt.public-key=classpath:jwt/app.pub
# access token validity period
jwt.access.expiration-ttl=1h
# refresh token validity period
jwt.refresh.expiration-ttl=7d
# secret key used by jwt
jwt.secret=${JWT_SECRET_KEY}